//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StudentTracker.StudentTrackerService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CourseInfo", Namespace="http://schemas.datacontract.org/2004/07/StudentTrackerService")]
    [System.SerializableAttribute()]
    public partial class CourseInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CourseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentlyAssignedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxAssignedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CourseName {
            get {
                return this.CourseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CourseNameField, value) != true)) {
                    this.CourseNameField = value;
                    this.RaisePropertyChanged("CourseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentlyAssigned {
            get {
                return this.CurrentlyAssignedField;
            }
            set {
                if ((this.CurrentlyAssignedField.Equals(value) != true)) {
                    this.CurrentlyAssignedField = value;
                    this.RaisePropertyChanged("CurrentlyAssigned");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxAssigned {
            get {
                return this.MaxAssignedField;
            }
            set {
                if ((this.MaxAssignedField.Equals(value) != true)) {
                    this.MaxAssignedField = value;
                    this.RaisePropertyChanged("MaxAssigned");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RawStudentInfo", Namespace="http://schemas.datacontract.org/2004/07/StudentTrackerService")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(StudentTracker.StudentTrackerService.InvalidRecord))]
    public partial class RawStudentInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SexField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Age {
            get {
                return this.AgeField;
            }
            set {
                if ((object.ReferenceEquals(this.AgeField, value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sex {
            get {
                return this.SexField;
            }
            set {
                if ((object.ReferenceEquals(this.SexField, value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvalidRecord", Namespace="http://schemas.datacontract.org/2004/07/StudentTrackerService")]
    [System.SerializableAttribute()]
    public partial class InvalidRecord : StudentTracker.StudentTrackerService.RawStudentInfo {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExcelDocumentImportResult", Namespace="http://schemas.datacontract.org/2004/07/StudentTrackerService")]
    [System.SerializableAttribute()]
    public partial class ExcelDocumentImportResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private StudentTracker.StudentTrackerService.InvalidRecord[] InvalidRecordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private StudentTracker.StudentTrackerService.RawStudentInfo[] ValidRecordsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public StudentTracker.StudentTrackerService.InvalidRecord[] InvalidRecords {
            get {
                return this.InvalidRecordsField;
            }
            set {
                if ((object.ReferenceEquals(this.InvalidRecordsField, value) != true)) {
                    this.InvalidRecordsField = value;
                    this.RaisePropertyChanged("InvalidRecords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public StudentTracker.StudentTrackerService.RawStudentInfo[] ValidRecords {
            get {
                return this.ValidRecordsField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidRecordsField, value) != true)) {
                    this.ValidRecordsField = value;
                    this.RaisePropertyChanged("ValidRecords");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StudentInfo", Namespace="http://schemas.datacontract.org/2004/07/StudentTrackerService")]
    [System.SerializableAttribute()]
    public partial class StudentInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] CoursesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SexField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Courses {
            get {
                return this.CoursesField;
            }
            set {
                if ((object.ReferenceEquals(this.CoursesField, value) != true)) {
                    this.CoursesField = value;
                    this.RaisePropertyChanged("Courses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sex {
            get {
                return this.SexField;
            }
            set {
                if ((object.ReferenceEquals(this.SexField, value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StudentCourse", Namespace="http://schemas.datacontract.org/2004/07/StudentTrackerService")]
    [System.SerializableAttribute()]
    public partial class StudentCourse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssignedStudentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CourseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAppliedForField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxStudentsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssignedStudents {
            get {
                return this.AssignedStudentsField;
            }
            set {
                if ((this.AssignedStudentsField.Equals(value) != true)) {
                    this.AssignedStudentsField = value;
                    this.RaisePropertyChanged("AssignedStudents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CourseName {
            get {
                return this.CourseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CourseNameField, value) != true)) {
                    this.CourseNameField = value;
                    this.RaisePropertyChanged("CourseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAppliedFor {
            get {
                return this.IsAppliedForField;
            }
            set {
                if ((this.IsAppliedForField.Equals(value) != true)) {
                    this.IsAppliedForField = value;
                    this.RaisePropertyChanged("IsAppliedFor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxStudents {
            get {
                return this.MaxStudentsField;
            }
            set {
                if ((this.MaxStudentsField.Equals(value) != true)) {
                    this.MaxStudentsField = value;
                    this.RaisePropertyChanged("MaxStudents");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UiSettings", Namespace="http://schemas.datacontract.org/2004/07/StudentTrackerService")]
    [System.SerializableAttribute()]
    public partial class UiSettings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BackgroundColourField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HeaderColourField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BackgroundColour {
            get {
                return this.BackgroundColourField;
            }
            set {
                if ((object.ReferenceEquals(this.BackgroundColourField, value) != true)) {
                    this.BackgroundColourField = value;
                    this.RaisePropertyChanged("BackgroundColour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HeaderColour {
            get {
                return this.HeaderColourField;
            }
            set {
                if ((object.ReferenceEquals(this.HeaderColourField, value) != true)) {
                    this.HeaderColourField = value;
                    this.RaisePropertyChanged("HeaderColour");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StudentTrackerService.ICoursesManager")]
    public interface ICoursesManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoursesManager/GetCourses", ReplyAction="http://tempuri.org/ICoursesManager/GetCoursesResponse")]
        StudentTracker.StudentTrackerService.CourseInfo[] GetCourses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoursesManager/GetCourses", ReplyAction="http://tempuri.org/ICoursesManager/GetCoursesResponse")]
        System.Threading.Tasks.Task<StudentTracker.StudentTrackerService.CourseInfo[]> GetCoursesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoursesManager/DeleteCourse", ReplyAction="http://tempuri.org/ICoursesManager/DeleteCourseResponse")]
        void DeleteCourse(string courseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoursesManager/DeleteCourse", ReplyAction="http://tempuri.org/ICoursesManager/DeleteCourseResponse")]
        System.Threading.Tasks.Task DeleteCourseAsync(string courseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoursesManager/AddCourse", ReplyAction="http://tempuri.org/ICoursesManager/AddCourseResponse")]
        bool AddCourse(StudentTracker.Domain.Entities.Course entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoursesManager/AddCourse", ReplyAction="http://tempuri.org/ICoursesManager/AddCourseResponse")]
        System.Threading.Tasks.Task<bool> AddCourseAsync(StudentTracker.Domain.Entities.Course entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoursesManager/UpdateCourse", ReplyAction="http://tempuri.org/ICoursesManager/UpdateCourseResponse")]
        bool UpdateCourse(string id, string name, string capacity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoursesManager/UpdateCourse", ReplyAction="http://tempuri.org/ICoursesManager/UpdateCourseResponse")]
        System.Threading.Tasks.Task<bool> UpdateCourseAsync(string id, string name, string capacity);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICoursesManagerChannel : StudentTracker.StudentTrackerService.ICoursesManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CoursesManagerClient : System.ServiceModel.ClientBase<StudentTracker.StudentTrackerService.ICoursesManager>, StudentTracker.StudentTrackerService.ICoursesManager {
        
        public CoursesManagerClient() {
        }
        
        public CoursesManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CoursesManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CoursesManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CoursesManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public StudentTracker.StudentTrackerService.CourseInfo[] GetCourses() {
            return base.Channel.GetCourses();
        }
        
        public System.Threading.Tasks.Task<StudentTracker.StudentTrackerService.CourseInfo[]> GetCoursesAsync() {
            return base.Channel.GetCoursesAsync();
        }
        
        public void DeleteCourse(string courseId) {
            base.Channel.DeleteCourse(courseId);
        }
        
        public System.Threading.Tasks.Task DeleteCourseAsync(string courseId) {
            return base.Channel.DeleteCourseAsync(courseId);
        }
        
        public bool AddCourse(StudentTracker.Domain.Entities.Course entity) {
            return base.Channel.AddCourse(entity);
        }
        
        public System.Threading.Tasks.Task<bool> AddCourseAsync(StudentTracker.Domain.Entities.Course entity) {
            return base.Channel.AddCourseAsync(entity);
        }
        
        public bool UpdateCourse(string id, string name, string capacity) {
            return base.Channel.UpdateCourse(id, name, capacity);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateCourseAsync(string id, string name, string capacity) {
            return base.Channel.UpdateCourseAsync(id, name, capacity);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StudentTrackerService.IStudentsManager")]
    public interface IStudentsManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentsManager/SaveStudents", ReplyAction="http://tempuri.org/IStudentsManager/SaveStudentsResponse")]
        void SaveStudents(StudentTracker.StudentTrackerService.RawStudentInfo[] students);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentsManager/SaveStudents", ReplyAction="http://tempuri.org/IStudentsManager/SaveStudentsResponse")]
        System.Threading.Tasks.Task SaveStudentsAsync(StudentTracker.StudentTrackerService.RawStudentInfo[] students);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentsManager/GetRecords", ReplyAction="http://tempuri.org/IStudentsManager/GetRecordsResponse")]
        StudentTracker.StudentTrackerService.ExcelDocumentImportResult GetRecords(StudentTracker.StudentTrackerService.RawStudentInfo[] studentsRawInformation, string culture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentsManager/GetRecords", ReplyAction="http://tempuri.org/IStudentsManager/GetRecordsResponse")]
        System.Threading.Tasks.Task<StudentTracker.StudentTrackerService.ExcelDocumentImportResult> GetRecordsAsync(StudentTracker.StudentTrackerService.RawStudentInfo[] studentsRawInformation, string culture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentsManager/GetStudent", ReplyAction="http://tempuri.org/IStudentsManager/GetStudentResponse")]
        StudentTracker.StudentTrackerService.StudentInfo GetStudent(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentsManager/GetStudent", ReplyAction="http://tempuri.org/IStudentsManager/GetStudentResponse")]
        System.Threading.Tasks.Task<StudentTracker.StudentTrackerService.StudentInfo> GetStudentAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentsManager/GetStudents", ReplyAction="http://tempuri.org/IStudentsManager/GetStudentsResponse")]
        StudentTracker.StudentTrackerService.StudentInfo[] GetStudents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentsManager/GetStudents", ReplyAction="http://tempuri.org/IStudentsManager/GetStudentsResponse")]
        System.Threading.Tasks.Task<StudentTracker.StudentTrackerService.StudentInfo[]> GetStudentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentsManager/GetStudentsCourses", ReplyAction="http://tempuri.org/IStudentsManager/GetStudentsCoursesResponse")]
        StudentTracker.StudentTrackerService.StudentCourse[] GetStudentsCourses(int studentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentsManager/GetStudentsCourses", ReplyAction="http://tempuri.org/IStudentsManager/GetStudentsCoursesResponse")]
        System.Threading.Tasks.Task<StudentTracker.StudentTrackerService.StudentCourse[]> GetStudentsCoursesAsync(int studentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentsManager/ApplyForCourse", ReplyAction="http://tempuri.org/IStudentsManager/ApplyForCourseResponse")]
        void ApplyForCourse(int studentId, int courseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentsManager/ApplyForCourse", ReplyAction="http://tempuri.org/IStudentsManager/ApplyForCourseResponse")]
        System.Threading.Tasks.Task ApplyForCourseAsync(int studentId, int courseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentsManager/LeaveCourse", ReplyAction="http://tempuri.org/IStudentsManager/LeaveCourseResponse")]
        void LeaveCourse(int studentId, int courseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentsManager/LeaveCourse", ReplyAction="http://tempuri.org/IStudentsManager/LeaveCourseResponse")]
        System.Threading.Tasks.Task LeaveCourseAsync(int studentId, int courseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentsManager/GetStudentFullName", ReplyAction="http://tempuri.org/IStudentsManager/GetStudentFullNameResponse")]
        string GetStudentFullName(int studentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentsManager/GetStudentFullName", ReplyAction="http://tempuri.org/IStudentsManager/GetStudentFullNameResponse")]
        System.Threading.Tasks.Task<string> GetStudentFullNameAsync(int studentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentsManager/UpdateStudent", ReplyAction="http://tempuri.org/IStudentsManager/UpdateStudentResponse")]
        void UpdateStudent(int id, string firstName, string lastName, string age, string sex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentsManager/UpdateStudent", ReplyAction="http://tempuri.org/IStudentsManager/UpdateStudentResponse")]
        System.Threading.Tasks.Task UpdateStudentAsync(int id, string firstName, string lastName, string age, string sex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentsManager/GetStudentsSex", ReplyAction="http://tempuri.org/IStudentsManager/GetStudentsSexResponse")]
        string GetStudentsSex(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentsManager/GetStudentsSex", ReplyAction="http://tempuri.org/IStudentsManager/GetStudentsSexResponse")]
        System.Threading.Tasks.Task<string> GetStudentsSexAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentsManager/GetUiColours", ReplyAction="http://tempuri.org/IStudentsManager/GetUiColoursResponse")]
        StudentTracker.StudentTrackerService.UiSettings GetUiColours(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentsManager/GetUiColours", ReplyAction="http://tempuri.org/IStudentsManager/GetUiColoursResponse")]
        System.Threading.Tasks.Task<StudentTracker.StudentTrackerService.UiSettings> GetUiColoursAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentsManager/GetUiColoursByName", ReplyAction="http://tempuri.org/IStudentsManager/GetUiColoursByNameResponse")]
        StudentTracker.StudentTrackerService.UiSettings GetUiColoursByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentsManager/GetUiColoursByName", ReplyAction="http://tempuri.org/IStudentsManager/GetUiColoursByNameResponse")]
        System.Threading.Tasks.Task<StudentTracker.StudentTrackerService.UiSettings> GetUiColoursByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentsManager/SetUiColours", ReplyAction="http://tempuri.org/IStudentsManager/SetUiColoursResponse")]
        void SetUiColours(string id, string backgroundColour, string headerColour);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentsManager/SetUiColours", ReplyAction="http://tempuri.org/IStudentsManager/SetUiColoursResponse")]
        System.Threading.Tasks.Task SetUiColoursAsync(string id, string backgroundColour, string headerColour);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStudentsManagerChannel : StudentTracker.StudentTrackerService.IStudentsManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StudentsManagerClient : System.ServiceModel.ClientBase<StudentTracker.StudentTrackerService.IStudentsManager>, StudentTracker.StudentTrackerService.IStudentsManager {
        
        public StudentsManagerClient() {
        }
        
        public StudentsManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StudentsManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StudentsManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StudentsManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void SaveStudents(StudentTracker.StudentTrackerService.RawStudentInfo[] students) {
            base.Channel.SaveStudents(students);
        }
        
        public System.Threading.Tasks.Task SaveStudentsAsync(StudentTracker.StudentTrackerService.RawStudentInfo[] students) {
            return base.Channel.SaveStudentsAsync(students);
        }
        
        public StudentTracker.StudentTrackerService.ExcelDocumentImportResult GetRecords(StudentTracker.StudentTrackerService.RawStudentInfo[] studentsRawInformation, string culture) {
            return base.Channel.GetRecords(studentsRawInformation, culture);
        }
        
        public System.Threading.Tasks.Task<StudentTracker.StudentTrackerService.ExcelDocumentImportResult> GetRecordsAsync(StudentTracker.StudentTrackerService.RawStudentInfo[] studentsRawInformation, string culture) {
            return base.Channel.GetRecordsAsync(studentsRawInformation, culture);
        }
        
        public StudentTracker.StudentTrackerService.StudentInfo GetStudent(int id) {
            return base.Channel.GetStudent(id);
        }
        
        public System.Threading.Tasks.Task<StudentTracker.StudentTrackerService.StudentInfo> GetStudentAsync(int id) {
            return base.Channel.GetStudentAsync(id);
        }
        
        public StudentTracker.StudentTrackerService.StudentInfo[] GetStudents() {
            return base.Channel.GetStudents();
        }
        
        public System.Threading.Tasks.Task<StudentTracker.StudentTrackerService.StudentInfo[]> GetStudentsAsync() {
            return base.Channel.GetStudentsAsync();
        }
        
        public StudentTracker.StudentTrackerService.StudentCourse[] GetStudentsCourses(int studentId) {
            return base.Channel.GetStudentsCourses(studentId);
        }
        
        public System.Threading.Tasks.Task<StudentTracker.StudentTrackerService.StudentCourse[]> GetStudentsCoursesAsync(int studentId) {
            return base.Channel.GetStudentsCoursesAsync(studentId);
        }
        
        public void ApplyForCourse(int studentId, int courseId) {
            base.Channel.ApplyForCourse(studentId, courseId);
        }
        
        public System.Threading.Tasks.Task ApplyForCourseAsync(int studentId, int courseId) {
            return base.Channel.ApplyForCourseAsync(studentId, courseId);
        }
        
        public void LeaveCourse(int studentId, int courseId) {
            base.Channel.LeaveCourse(studentId, courseId);
        }
        
        public System.Threading.Tasks.Task LeaveCourseAsync(int studentId, int courseId) {
            return base.Channel.LeaveCourseAsync(studentId, courseId);
        }
        
        public string GetStudentFullName(int studentId) {
            return base.Channel.GetStudentFullName(studentId);
        }
        
        public System.Threading.Tasks.Task<string> GetStudentFullNameAsync(int studentId) {
            return base.Channel.GetStudentFullNameAsync(studentId);
        }
        
        public void UpdateStudent(int id, string firstName, string lastName, string age, string sex) {
            base.Channel.UpdateStudent(id, firstName, lastName, age, sex);
        }
        
        public System.Threading.Tasks.Task UpdateStudentAsync(int id, string firstName, string lastName, string age, string sex) {
            return base.Channel.UpdateStudentAsync(id, firstName, lastName, age, sex);
        }
        
        public string GetStudentsSex(int id) {
            return base.Channel.GetStudentsSex(id);
        }
        
        public System.Threading.Tasks.Task<string> GetStudentsSexAsync(int id) {
            return base.Channel.GetStudentsSexAsync(id);
        }
        
        public StudentTracker.StudentTrackerService.UiSettings GetUiColours(string id) {
            return base.Channel.GetUiColours(id);
        }
        
        public System.Threading.Tasks.Task<StudentTracker.StudentTrackerService.UiSettings> GetUiColoursAsync(string id) {
            return base.Channel.GetUiColoursAsync(id);
        }
        
        public StudentTracker.StudentTrackerService.UiSettings GetUiColoursByName(string name) {
            return base.Channel.GetUiColoursByName(name);
        }
        
        public System.Threading.Tasks.Task<StudentTracker.StudentTrackerService.UiSettings> GetUiColoursByNameAsync(string name) {
            return base.Channel.GetUiColoursByNameAsync(name);
        }
        
        public void SetUiColours(string id, string backgroundColour, string headerColour) {
            base.Channel.SetUiColours(id, backgroundColour, headerColour);
        }
        
        public System.Threading.Tasks.Task SetUiColoursAsync(string id, string backgroundColour, string headerColour) {
            return base.Channel.SetUiColoursAsync(id, backgroundColour, headerColour);
        }
    }
}
